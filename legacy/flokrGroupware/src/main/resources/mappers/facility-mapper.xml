<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="facilityMapper">
    <!-- Facility 결과 매핑 -->
    <resultMap id="facilityResultMap" type="facility">
        <id property="facilityNo" column="FACILITY_NO"/>
        <result property="facilityName" column="FACILITY_NAME"/>
        <result property="facilityLocation" column="FACILITY_LOCATION"/>
        <result property="capacity" column="CAPACITY"/>
        <result property="description" column="DESCRIPTION"/>
        <result property="imagePath" column="IMAGE_PATH"/>
        <result property="facilityStatus" column="FACILITY_STATUS"/>
        <result property="facilityType" column="FACILITY_TYPE"/>
        <result property="createDate" column="CREATE_DATE"/>
        <result property="updateDate" column="UPDATE_DATE"/>
    </resultMap>
    
    <!-- 시설 목록 조회 -->
    <select id="selectFacilityList" resultType="facility">
		 SELECT 
				FACILITY_NO as facilityNo,
				FACILITY_NAME as facilityName,
				FACILITY_LOCATION as facilityLocation,
				CAPACITY as capacity,
				DESCRIPTION as description,
				IMAGE_PATH as imagePath,
				'ACTIVE' AS facilityStatus,
				'MEETING_ROOM' AS facilityType,
				SYSDATE AS createDate,
				SYSDATE AS updateDate
	       FROM FACILITY
	   ORDER BY FACILITY_NO DESC
    </select>
    
    <!-- 시설 상세 정보 조회 -->
    <select id="selectFacility" parameterType="int" resultMap="facilityResultMap">
        SELECT 
            FACILITY_NO,
            FACILITY_NAME,
            FACILITY_LOCATION,
            CAPACITY,
            DESCRIPTION,
            IMAGE_PATH,
            'ACTIVE' AS FACILITY_STATUS,
            'MEETING_ROOM' AS FACILITY_TYPE,
            SYSDATE AS CREATE_DATE,
            SYSDATE AS UPDATE_DATE
        FROM FACILITY
        WHERE FACILITY_NO = #{facilityNo}
    </select>
    
    <!-- 시설명으로 검색 -->
    <select id="searchFacilities" parameterType="string" resultMap="facilityResultMap">
        SELECT 
            FACILITY_NO,
            FACILITY_NAME,
            FACILITY_LOCATION,
            CAPACITY,
            DESCRIPTION,
            IMAGE_PATH,
            'ACTIVE' AS FACILITY_STATUS,
            'MEETING_ROOM' AS FACILITY_TYPE,
            SYSDATE AS CREATE_DATE,
            SYSDATE AS UPDATE_DATE
        FROM FACILITY
        WHERE FACILITY_NAME LIKE '%' || #{keyword} || '%'
        OR DESCRIPTION LIKE '%' || #{keyword} || '%'
        ORDER BY FACILITY_NO DESC
    </select>
    
    <!-- 시설 추가 -->
    <insert id="insertFacility" parameterType="facility">
        INSERT INTO FACILITY (
            FACILITY_NO,
            FACILITY_NAME,
            FACILITY_LOCATION,
            CAPACITY,
            DESCRIPTION,
            IMAGE_PATH
        ) VALUES (
            SEQ_FACILITY.NEXTVAL,
            #{facilityName},
            #{facilityLocation},
            #{capacity},
            #{description},
            #{imagePath}
        )
        <selectKey resultType="int" keyProperty="facilityNo" order="AFTER">
            SELECT SEQ_FACILITY.CURRVAL FROM DUAL
        </selectKey>
    </insert>
    
    <!-- 시설 정보 수정 -->
    <update id="updateFacility" parameterType="facility">
	   UPDATE FACILITY
		  SET
		      FACILITY_NAME = #{facilityName},
		      FACILITY_LOCATION = #{facilityLocation},
		      CAPACITY = #{capacity},
		      DESCRIPTION = #{description}
		WHERE FACILITY_NO = #{facilityNo}
    </update>
    
    <!-- 시설 삭제 -->
    <delete id="deleteFacility" parameterType="int">
        DELETE FROM FACILITY
        WHERE FACILITY_NO = #{facilityNo}
    </delete>
    
    <!-- 최근 예약 목록 조회 -->
    <select id="selectRecentReservations" parameterType="int" resultType="map">
        SELECT 
            R.RESERVATION_NO,
            R.FACILITY_NO,
            F.FACILITY_NAME,
            R.RESERVER_EMP_NO,
            E.EMP_NAME AS RESERVER_NAME,
            D.DEPT_NAME,
            R.START_TIME,
            R.END_TIME,
            R.PURPOSE,
            R.RES_STATUS,
            R.CREATE_DATE
        FROM FACILITY_RESERVATION R
        JOIN FACILITY F ON R.FACILITY_NO = F.FACILITY_NO
        JOIN EMPLOYEE E ON R.RESERVER_EMP_NO = E.EMP_NO
        JOIN DEPARTMENT D ON E.DEPT_NO = D.DEPT_NO
        WHERE R.CREATE_DATE >= SYSDATE - #{days}
        ORDER BY R.CREATE_DATE DESC
    </select>
  
    <!-- 조건별 예약 목록 조회 -->
    <select id="selectReservationsByCondition" parameterType="map" resultType="map">
        SELECT 
            R.RESERVATION_NO,
            R.FACILITY_NO,
            F.FACILITY_NAME,
            R.RESERVER_EMP_NO,
            E.EMP_NAME AS RESERVER_NAME,
            D.DEPT_NAME,
            R.START_TIME,
            R.END_TIME,
            R.PURPOSE,
            R.RES_STATUS,
            R.CREATE_DATE
        FROM FACILITY_RESERVATION R
        JOIN FACILITY F ON R.FACILITY_NO = F.FACILITY_NO
        JOIN EMPLOYEE E ON R.RESERVER_EMP_NO = E.EMP_NO
        JOIN DEPARTMENT D ON E.DEPT_NO = D.DEPT_NO
        <where>
            <if test="facilityNo != null">
                AND R.FACILITY_NO = #{facilityNo}
            </if>
            <if test="status != null and status != ''">
                AND R.RES_STATUS = #{status}
            </if>
            <if test="date != null and date != ''">
                AND (TO_CHAR(R.START_TIME, 'YYYY-MM-DD') = #{date}
                OR TO_CHAR(R.END_TIME, 'YYYY-MM-DD') = #{date})
            </if>
            <if test="keyword != null and keyword != ''">
                AND (
                    E.EMP_NAME LIKE '%' || #{keyword} || '%'
                    OR E.EMP_ID LIKE '%' || #{keyword} || '%'
                    OR D.DEPT_NAME LIKE '%' || #{keyword} || '%'
                    OR R.PURPOSE LIKE '%' || #{keyword} || '%'
                )
            </if>
        </where>
        ORDER BY R.CREATE_DATE DESC
    </select>
    
    <!-- 예약 상세 정보 조회 -->
    <select id="selectReservationDetail" parameterType="int" resultType="map">
        SELECT 
            R.RESERVATION_NO,
            R.FACILITY_NO,
            F.FACILITY_NAME,
            R.RESERVER_EMP_NO,
            E.EMP_NAME AS RESERVER_NAME,
            E.EMP_ID AS RESERVER_ID,
            D.DEPT_NAME,
            P.POSITION_NAME,
            R.START_TIME,
            R.END_TIME,
            R.PURPOSE,
            R.RES_STATUS,
            R.CREATE_DATE,
            R.UPDATE_DATE
        FROM FACILITY_RESERVATION R
        JOIN FACILITY F ON R.FACILITY_NO = F.FACILITY_NO
        JOIN EMPLOYEE E ON R.RESERVER_EMP_NO = E.EMP_NO
        JOIN DEPARTMENT D ON E.DEPT_NO = D.DEPT_NO
        JOIN POSITION P ON E.POSITION_NO = P.POSITION_NO
        WHERE R.RESERVATION_NO = #{reservationNo}
    </select>
    
    <!-- 시설별 예약 수 조회 -->
    <select id="getReservationCountByFacility" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM FACILITY_RESERVATION
        WHERE FACILITY_NO = #{facilityNo}
    </select>
    
    <!-- 예약 상태 변경 -->
    <update id="updateReservationStatus" parameterType="map">
        UPDATE FACILITY_RESERVATION
        SET
            RES_STATUS = #{status},
            UPDATE_DATE = SYSDATE
        WHERE RESERVATION_NO = #{reservationNo}
    </update>
    
    <!-- 활성화된 시설 목록 조회 -->
    <select id="selectActiveFacilityList" resultMap="facilityResultMap">
        SELECT 
            FACILITY_NO,
            FACILITY_NAME,
            FACILITY_LOCATION,
            CAPACITY,
            DESCRIPTION,
            IMAGE_PATH,
            'ACTIVE' AS FACILITY_STATUS,
            CASE 
                WHEN FACILITY_NAME LIKE '%회의실%' THEN 'MEETING_ROOM'
                WHEN FACILITY_NAME LIKE '%차량%' THEN 'VEHICLE'
                ELSE 'EQUIPMENT'
            END AS FACILITY_TYPE,
            SYSDATE AS CREATE_DATE,
            SYSDATE AS UPDATE_DATE
        FROM FACILITY
        ORDER BY FACILITY_NO DESC
    </select>
    
    <!-- 사용 가능한 시설 목록 조회 (조건별) -->
    <select id="selectAvailableFacilities" parameterType="map" resultMap="facilityResultMap">
        SELECT 
            FACILITY_NO,
            FACILITY_NAME,
            FACILITY_LOCATION,
            CAPACITY,
            DESCRIPTION,
            IMAGE_PATH,
            'ACTIVE' AS FACILITY_STATUS,
            CASE 
                WHEN FACILITY_NAME LIKE '%회의실%' THEN 'MEETING_ROOM'
                WHEN FACILITY_NAME LIKE '%차량%' THEN 'VEHICLE'
                ELSE 'EQUIPMENT'
            END AS FACILITY_TYPE,
            SYSDATE AS CREATE_DATE,
            SYSDATE AS UPDATE_DATE
        FROM FACILITY
        <where>
            <if test="facilityType != null and facilityType != ''">
                AND (
                    <choose>
                        <when test="facilityType == 'MEETING_ROOM'">
                            FACILITY_NAME LIKE '%회의실%'
                        </when>
                        <when test="facilityType == 'VEHICLE'">
                            FACILITY_NAME LIKE '%차량%'
                        </when>
                        <when test="facilityType == 'EQUIPMENT'">
                            FACILITY_NAME NOT LIKE '%회의실%' AND FACILITY_NAME NOT LIKE '%차량%'
                        </when>
                    </choose>
                )
            </if>
            <if test="keyword != null and keyword != ''">
                AND (
                    FACILITY_NAME LIKE '%' || #{keyword} || '%'
                    OR FACILITY_LOCATION LIKE '%' || #{keyword} || '%'
                    OR DESCRIPTION LIKE '%' || #{keyword} || '%'
                )
            </if>
        </where>
        ORDER BY FACILITY_NO DESC
    </select>
    
	<!-- 예약 중복 체크 -->
	<select id="checkReservationOverlap" parameterType="map" resultType="int">
	    SELECT COUNT(*)
	    FROM FACILITY_RESERVATION
	    WHERE FACILITY_NO = #{facilityNo}
	    AND RES_STATUS IN ('PENDING', 'APPROVED')
	    AND (
	        (TO_DATE(#{startTime}, 'YYYY-MM-DD HH24:MI:SS') BETWEEN START_TIME AND END_TIME)
	        OR (TO_DATE(#{endTime}, 'YYYY-MM-DD HH24:MI:SS') BETWEEN START_TIME AND END_TIME)
	        OR (START_TIME BETWEEN TO_DATE(#{startTime}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endTime}, 'YYYY-MM-DD HH24:MI:SS'))
	    )
	</select>
	
	<!-- 예약 생성 -->
	<insert id="insertReservation" parameterType="map">
	    INSERT INTO FACILITY_RESERVATION (
	        RESERVATION_NO,
	        FACILITY_NO,
	        RESERVER_EMP_NO,
	        START_TIME,
	        END_TIME,
	        PURPOSE,
	        RES_STATUS,
	        CREATE_DATE,
	        UPDATE_DATE
	    ) VALUES (
	        SEQ_FACILITY_RESERVATION.NEXTVAL,
	        #{facilityNo},
	        #{reserverEmpNo},
			TO_DATE(#{startTime}, 'YYYY-MM-DD HH24:MI:SS'),
			TO_DATE(#{endTime}, 'YYYY-MM-DD HH24:MI:SS'),
	        #{purpose},
	        #{status},
	        SYSDATE,
	        SYSDATE
	    )
	</insert>
    
    <!-- 내 예약 목록 조회 -->
    <select id="selectMyReservations" parameterType="map" resultType="map">
        SELECT 
            R.RESERVATION_NO,
            R.FACILITY_NO,
            F.FACILITY_NAME,
            R.RESERVER_EMP_NO,
            E.EMP_NAME AS RESERVER_NAME,
            D.DEPT_NAME,
            R.START_TIME,
            R.END_TIME,
            R.PURPOSE,
            R.RES_STATUS,
            R.CREATE_DATE,
            R.UPDATE_DATE
        FROM FACILITY_RESERVATION R
        JOIN FACILITY F ON R.FACILITY_NO = F.FACILITY_NO
        JOIN EMPLOYEE E ON R.RESERVER_EMP_NO = E.EMP_NO
        JOIN DEPARTMENT D ON E.DEPT_NO = D.DEPT_NO
        <where>
            R.RESERVER_EMP_NO = #{empNo}
            <if test="facilityNo != null">
                AND R.FACILITY_NO = #{facilityNo}
            </if>
            <if test="status != null and status != ''">
                AND R.RES_STATUS = #{status}
            </if>
            <if test="date != null and date != ''">
                AND TO_CHAR(R.START_TIME, 'YYYY-MM-DD') = #{date}
            </if>
        </where>
        ORDER BY R.START_TIME DESC
    </select>
    
    <!-- 예약 수정 -->
	<update id="updateReservation" parameterType="map">
	    UPDATE FACILITY_RESERVATION
	    SET 
	        FACILITY_NO = #{facilityNo},
	        START_TIME = TO_DATE(#{startTime}, 'YYYY-MM-DD HH24:MI:SS'),
	        END_TIME = TO_DATE(#{endTime}, 'YYYY-MM-DD HH24:MI:SS'),
	        PURPOSE = #{purpose},
	        UPDATE_DATE = SYSDATE
	    WHERE RESERVATION_NO = #{reservationNo}
	</update>
	
	<!-- 최근 예약 상태 -->
	<update id="resetReservationApprovalStatus" parameterType="int">
	    UPDATE FACILITY_RESERVATION
	    SET RES_STATUS = 'PENDING'
	    WHERE RESERVATION_NO = #{reservationNo}
	</update>
	
	<!-- 예약 본인 예약 제외 중복 체크 -->
	<select id="checkReservationOverlapExcludeSelf" parameterType="map" resultType="int">
	    SELECT COUNT(*)
	    FROM FACILITY_RESERVATION
	    WHERE FACILITY_NO = #{facilityNo}
	    AND RES_STATUS IN ('PENDING', 'APPROVED')
	    AND RESERVATION_NO != #{excludeReservationNo}
	    AND (
	        (TO_DATE(#{startTime}, 'YYYY-MM-DD HH24:MI:SS') BETWEEN START_TIME AND END_TIME)
	        OR (TO_DATE(#{endTime}, 'YYYY-MM-DD HH24:MI:SS') BETWEEN START_TIME AND END_TIME)
	        OR (START_TIME BETWEEN TO_DATE(#{startTime}, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{endTime}, 'YYYY-MM-DD HH24:MI:SS'))
	    )
	</select>
</mapper>